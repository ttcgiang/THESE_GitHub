* using log directory ‘/home/tran/Desktop/These_TTCGIANG/THESE_GitHub/CODE_dizzys/refreshDIZZYS_2015_10_23/dizzyslan3/dizzys.Rcheck’
* using R version 3.2.0 (2015-04-16)
* using platform: x86_64-pc-linux-gnu (64-bit)
* using session charset: UTF-8
* checking for file ‘dizzys/DESCRIPTION’ ... OK
* checking extension type ... Package
* this is package ‘dizzys’ version ‘0.4’
* checking package namespace information ... OK
* checking package dependencies ... OK
* checking if this is a source package ... OK
* checking if there is a namespace ... OK
* checking for executable files ... OK
* checking for hidden files and directories ... NOTE
Found the following hidden files and directories:
  src/.RData
  src/.Rhistory
These were most likely included in error. See section ‘Package
structure’ in the ‘Writing R Extensions’ manual.
* checking for portable file names ... OK
* checking for sufficient/correct file permissions ... OK
* checking whether package ‘dizzys’ can be installed ... WARNING
Found the following significant warnings:
  seir_stoch.cpp:349:230: warning: too many arguments for format [-Wformat-extra-args]
See ‘/home/tran/Desktop/These_TTCGIANG/THESE_GitHub/CODE_dizzys/refreshDIZZYS_2015_10_23/dizzyslan3/dizzys.Rcheck/00install.out’ for details.
* checking installed package size ... OK
* checking package directory ... OK
* checking DESCRIPTION meta-information ... WARNING
Non-standard license specification:
  0.4
Standardizable: FALSE
* checking top-level files ... OK
* checking for left-over files ... OK
* checking index information ... WARNING
Demos with missing or empty index information:
[1] "sirmodel"
Demo index entries without corresponding demo:
      Item 
"sirModel" 
Vignettes with missing or empty \VignetteIndexEntry:
[1] "dizzys.Rnw"
See sections ‘The INDEX file’ and ‘Package subdirectories’ in the
‘Writing R Extensions’ manual.
* checking package subdirectories ... OK
* checking R files for non-ASCII characters ... OK
* checking R files for syntax errors ... OK
* checking whether the package can be loaded ... OK
* checking whether the package can be loaded with stated dependencies ... WARNING
My package is so cool
so I will print these lines each time you load it
Error : .onLoad failed in loadNamespace() for 'dizzys', details:
  call: match(el, set, 0L)
  error: could not find function "installed.packages"
Error: package or namespace load failed for ‘dizzys’
Execution halted

It looks like this package (or one of its dependent packages) has an
unstated dependence on a standard package.  All dependencies must be
declared in DESCRIPTION.
See section ‘The DESCRIPTION file’ in the ‘Writing R Extensions’
manual.
* checking whether the package can be unloaded cleanly ... WARNING
Error : .onLoad failed in loadNamespace() for 'dizzys', details:
  call: match(el, set, 0L)
  error: could not find function "installed.packages"
Error: package or namespace load failed for ‘dizzys’
Execution halted
* checking whether the namespace can be loaded with stated dependencies ... WARNING
My package is so cool
so I will print these lines each time you load it
Error: .onLoad failed in loadNamespace() for 'dizzys', details:
  call: match(el, set, 0L)
  error: could not find function "installed.packages"
Execution halted

A namespace must be able to be loaded with just the base namespace
loaded: otherwise if the namespace gets loaded by a saved object, the
session will be unable to start.

Probably some imports need to be declared in the NAMESPACE file.
* checking whether the namespace can be unloaded cleanly ... OK
* checking loading without being on the library search path ... OK
* checking dependencies in R code ... NOTE
Error: package or namespace load failed for ‘dizzys’
Call sequence:
2: stop(gettextf("package or namespace load failed for %s", sQuote(package)), 
       call. = FALSE, domain = NA)
1: library(package, lib.loc = lib.loc, character.only = TRUE, verbose = FALSE)
Execution halted
* checking S3 generic/method consistency ... WARNING
print:
  function(x, ...)
print.seir:
  function(object, ...)

lines:
  function(x, ...)
lines.seir:
  function(object, x, y, z, pop, col, type, unitTIME, proj, ...)

plot:
  function(x, ...)
plot.comp.surv.estim:
  function(object, ...)

plot:
  function(x, ...)
plot.pers:
  function(object, ...)

plot:
  function(x, ...)
plot.seir:
  function(object, x, y, z, pop, col, type, unitTIME, proj, add, xlim,
           ylim, zlim, xlab, ylab, zlab, ...)

plot:
  function(x, ...)
plot.surv.prob:
  function(object, ...)

See section ‘Generic functions and methods’ in the ‘Writing R
Extensions’ manual.
* checking replacement functions ... OK
* checking foreign function calls ... OK
* checking R code for possible problems ... NOTE
File ‘dizzys/R/zzz.R’:
  .onLoad calls:
    packageStartupMessage("My package is so cool")
    packageStartupMessage("so I will print these lines each time you load it")

See section ‘Good practice’ in '?.onAttach'.

!.seir: no visible binding for global variable ‘object’
!=.seir: no visible binding for global variable ‘object’
%%.seir: no visible binding for global variable ‘object’
%/%.seir: no visible binding for global variable ‘object’
&.seir: no visible binding for global variable ‘object’
**.seir: no visible binding for global variable ‘object’
*.seir: no visible binding for global variable ‘object’
+.seir: no visible binding for global variable ‘object’
-.seir: no visible binding for global variable ‘object’
/.seir: no visible binding for global variable ‘object’
<.seir: no visible binding for global variable ‘object’
<=.seir: no visible binding for global variable ‘object’
==.seir: no visible binding for global variable ‘object’
>.seir: no visible binding for global variable ‘object’
>=.seir: no visible binding for global variable ‘object’
^.seir: no visible binding for global variable ‘object’
|.seir: no visible binding for global variable ‘object’
* checking Rd files ... WARNING
prepare_Rd: lines.seir.Rd:36: Dropping empty section \seealso
plot.comp.surv.estim.Rd: non-ASCII input and no declared encoding
plot.pers.Rd: non-ASCII input and no declared encoding
problems found in ‘plot.comp.surv.estim.Rd’, ‘plot.pers.Rd’
* checking Rd metadata ... OK
* checking Rd cross-references ... OK
* checking for missing documentation entries ... WARNING
Undocumented code objects:
  ‘!.seir’ ‘!=.seir’ ‘%%.seir’ ‘%/%.seir’ ‘&.seir’ ‘**.seir’ ‘*.seir’
  ‘+.seir’ ‘-.seir’ ‘/.seir’ ‘<.seir’ ‘<=.seir’ ‘==.seir’ ‘>.seir’
  ‘>=.seir’ ‘^.seir’ ‘average.hasard’ ‘baseline.hazard’ ‘baseline.surv’
  ‘callpackg’ ‘detail.cox’ ‘formeTSEPRNI’ ‘initVariables’
  ‘is.installed’ ‘is.integer0’ ‘paramduration’ ‘pause’ ‘phiseq’
  ‘plot.surv.prob’ ‘pop’ ‘resizeVector’ ‘seir.det’ ‘seir.stoch’
  ‘sses.adaptivetau’ ‘surv.beta’ ‘surv.cox’ ‘surv.prob’ ‘timeseq’
  ‘|.seir’
Undocumented S4 methods:
  generic 'average.hasard' and siglist 'seir'
  generic 'baseline.hazard' and siglist 'seir'
  generic 'baseline.surv' and siglist 'seir'
  generic 'detail.cox' and siglist 'seir'
  generic 'persistence' and siglist 'seir'
  generic 'plot.comp.surv.estim' and siglist 'seir'
  generic 'plot.pers' and siglist 'seir'
  generic 'plot.surv.prob' and siglist 'seir'
  generic 'surv.beta' and siglist 'seir'
  generic 'surv.cox' and siglist 'seir'
  generic 'surv.prob' and siglist 'seir'
All user-level objects in a package (including S4 classes and methods)
should have documentation entries.
See chapter ‘Writing R documentation files’ in the ‘Writing R
Extensions’ manual.
* checking for code/documentation mismatches ... WARNING
Functions or methods with usage in documentation object 'str.seir' but not in code:
  str

Codoc mismatches from documentation object 'persistence':
persistence
  Code: function(object, ...)
  Docs: function(object)
  Argument names in code not in docs:
    ...

Codoc mismatches from documentation object 'plot.comp.surv.estim':
plot.comp.surv.estim
  Code: function(object, ...)
  Docs: function(this, ...)
  Argument names in code not in docs:
    object
  Argument names in docs not in code:
    this
  Mismatches in argument names:
    Position: 1 Code: object Docs: this

Codoc mismatches from documentation object 'plot.pers':
plot.pers
  Code: function(object, ...)
  Docs: function(object, x, y, type, col, xlim, ylim, curvetype,
                 vilabline, ...)
  Argument names in docs not in code:
    x y type col xlim ylim curvetype vilabline
  Mismatches in argument names:
    Position: 2 Code: ... Docs: x

Codoc mismatches from documentation object 'plot.seir':
plot.seir
  Code: function(object, x = "time", y = 4, z = NULL, pop = c(), col =
                 "black", type = "l", unitTIME = 1, proj = list(), add
                 = F, xlim = NULL, ylim = NULL, zlim = NULL, xlab = x,
                 ylab = y, zlab = z, ...)
  Docs: function(object, x = "time", y = 4, z = NULL, pop = c(), col =
                 "black", type = "l", unitTIME = 1, proj = list(), add
                 = F, xlim = NULL, ylim = NULL, zlim = NULL, xlab = x,
                 ylab = y, zlab = z)
  Argument names in code not in docs:
    ...

Codoc mismatches from documentation object 'seir':
seir
  Code: function(type = "stoch", duration = 5 * 365, method = "direct",
                 unitTIME = 1, mu = 1/(70 * 365), beta0 = 1000/365,
                 beta1 = 0.1, sigma = 1/8, gamma = 1/5, T = 365, phi =
                 0, nbVilles = 1, epsilon = 0, rho = 0, seed =
                 as.numeric(Sys.time()), rng = "good", S = NULL, E =
                 NULL, I = NULL, R = NULL, N = 1e+07, ...)
  Docs: function(type = "stoch", duration = 5 * 365, method = "direct",
                 unitTIME = 1, mu = 1/(70 * 365), beta0 = 1000/365,
                 beta1 = 0.1, sigma = 1/8, gamma = 1/5, T = 365, phi =
                 0, nbVilles = 1, epsilon = 0, rho = 0, seed =
                 as.numeric(Sys.time()), rng = "good", S = NULL, E =
                 NULL, I = NULL, R = NULL, N = 1e+07)
  Argument names in code not in docs:
    ...

* checking Rd \usage sections ... WARNING
Undocumented arguments in documentation object 'lines.seir'
  ‘type’

Objects in \usage without \alias in documentation object 'str.seir':
  ‘str’

Functions with \usage entries need to have the appropriate \alias
entries, and all their arguments documented.
The \usage entries must correspond to syntactically valid R code.
See chapter ‘Writing R documentation files’ in the ‘Writing R
Extensions’ manual.
S3 methods shown with full name in documentation object 'coef.seir':
  ‘coef.seir’

S3 methods shown with full name in documentation object 'lines.seir':
  ‘lines.seir’

S3 methods shown with full name in documentation object 'plot.comp.surv.estim':
  ‘plot.comp.surv.estim’

S3 methods shown with full name in documentation object 'plot.pers':
  ‘plot.pers’

S3 methods shown with full name in documentation object 'plot.seir':
  ‘plot.seir’

S3 methods shown with full name in documentation object 'pop.seir':
  ‘pop.seir’

S3 methods shown with full name in documentation object 'print.seir':
  ‘print.seir’

S3 methods shown with full name in documentation object 'summary.seir':
  ‘summary.seir’

The \usage entries for S3 methods should use the \method markup and not
their full name.
See chapter ‘Writing R documentation files’ in the ‘Writing R
Extensions’ manual.
* checking Rd contents ... OK
* checking for unstated dependencies in examples ... OK
* checking line endings in C/C++/Fortran sources/headers ... OK
* checking line endings in Makefiles ... OK
* checking compilation flags in Makevars ... OK
* checking for GNU extensions in Makefiles ... OK
* checking for portable use of $(BLAS_LIBS) and $(LAPACK_LIBS) ... OK
* checking compiled code ... NOTE
File ‘dizzys/libs/dizzys.so’:
  Found ‘_ZSt4cout’, possibly from ‘std::cout’ (C++)
    Objects: ‘main.o’, ‘rangenyan.o’, ‘seir_adaptivetau.o’,
      ‘seir_stoch.o’
  Found ‘rand’, possibly from ‘rand’ (C)
    Object: ‘seir_stoch.o’
  Found ‘srand’, possibly from ‘srand’ (C)
    Object: ‘seir_stoch.o’

Compiled code should not call entry points which might terminate R nor
write to stdout/stderr instead of to the console, nor the system RNG.

See ‘Writing portable packages’ in the ‘Writing R Extensions’ manual.
* checking sizes of PDF files under ‘inst/doc’ ... OK
* checking installed files from ‘inst/doc’ ... OK
* checking for old-style vignette sources ... NOTE
Vignette sources only in ‘inst/doc’:
  ‘dizzys.Rnw’
A ‘vignettes’ directory is required as from R 3.1.0
and these will not be indexed nor checked
* checking examples ... ERROR
Running examples in ‘dizzys-Ex.R’ failed
The error most likely occurred in:

> ### Name: plot.seir
> ### Title: Plotting 2D/3D a seir Object
> ### Aliases: plot.seir
> ### Keywords: seir model
> 
> ### ** Examples
> 
> 	 obj<-seir(nbVilles=3, N=1e7)
> 	plot(obj,col=c("red","blue"),lwd=2,xlab="time (day)", ylab="number of infectives")
> 	plot(obj,z="S",col=c("red","blue"),lwd=2,xlab="time (day)", ylab="number of infectives",zlab="number of susceptible")
> 	plot(obj,z="S",col=c("red","blue"),lwd=2,proj=list(c("time","P"),c("time","S")),box=F,xlab="time (day)", ylab="number of infectives",zlab="number of susceptible")
Error in do.call("bbox3d", c(list(nticks = nticks, draw_front = box, expand = expand),  : 
  F used instead of FALSE
Calls: plot ... plot3d -> plot3d.default -> decorate3d -> axes3d -> do.call
Execution halted
* checking PDF version of manual ... OK
* DONE
Status: 1 ERROR, 11 WARNINGs, 5 NOTEs
